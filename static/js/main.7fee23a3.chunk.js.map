{"version":3,"sources":["context/langContext.js","App.js","reportWebVitals.js","index.js","components/Notification.js","helprs/axiosInstance.js","helprs/api.js","Views/Search.js","components/LangMenu.js","components/Twitter.js","Views/SearchResults.js","context/languageOptions.js"],"names":["LangContext","React","createContext","UpdateLangContext","useLanguage","useContext","useUpdateLang","LangProvider","children","defualtLang","value","localStorage","getItem","useState","lang","setLang","console","log","Provider","require","config","App","Search","vertical","horizontal","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","OpenNotificationFunction","Notification","props","open","setOpen","message","setMessage","verticalPosition","setVerticalPosition","horizontalPosition","setHorizonPosition","openNotification","newMessage","useEffect","undefined","messageSpan","id","dangerouslySetInnerHTML","__html","content","Snackbar","anchorOrigin","autoHideDuration","onClose","ContentProps","notify","axiosInstance","axios","create","baseURL","instance","query","post","res","data","catch","err","response","status","GetIpAddress","get","loading","SetLoading","hideTitle","setHideTitle","tweets","setTweets","currentLang","IpAddExceedLimit","a","Buffer","from","toString","API","ipAdd","IPv4","search","trim","LangOptions","MainPage","emptyError","userIp","ar","RegExp","req","test","TweetSearch","generalError","exceedError","event","code","preventDefault","blur","target","results","classList","add","warn","className","src","alt","style","visibility","opacity","transition","type","placeholder","placeHolder","onKeyUp","color","height","width","timeout","LangMenu","showMenu","setShowMenu","engSelected","setEngSelected","arSelected","setArSelected","updatLang","onClick","size","display","setItem","setTimeout","Twitter","postive","negative","searchTerm","postiveTweets","setPostiveTweets","negativeTweets","setNegativeTweets","isPositiveCliced","setIsPositiveCliced","isNegativeClicked","setIsNegativeClicked","tweetsDisplay","setTweetsDisplay","lastScrollPos","setLastScrollPos","lastScrollUpPos","setLastScrollUpPos","divHeight","setDivHeight","buttons","scorllDownThreshold","scrollUpThreshold","formatAnalatics","n","toFixed","formatDate","date","newDate","replace","sec","exec","compare","b","retweet_count","favorite_count","sort","clientHeight","displayRequestClass","map","tweet","profile_image_url","screen_name","verified","username","url","window","reply_count","uuidv4","changeDisplayedTweets","upperCaseFirst","charAt","toUpperCase","slice","toLowerCase","hashtag","tweetsElements","getElementsByClassName","i","length","innerHTML","replaceAll","clicked","Negative","onScroll","currentScrollPos","scrollTop","removeProperty","setProperty","SearchPage","Totalcount","total_count","positiveCount","postive_count","negativeCount","negative_count","changeDigitsToArabic","number","convert","valueArr","Array","String","Number","result","forEach","num","SearchResults","Found","Tweests","charts_graph","pie_graph","postive_tweets","negative_tweets","search_term"],"mappings":"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","file":"static/js/main.7fee23a3.chunk.js","sourcesContent":["import React, { useState, useContext } from \"react\";\n\nconst LangContext = React.createContext();\nconst UpdateLangContext = React.createContext();\n\nexport const useLanguage = () => {\n    return useContext(LangContext);\n};\n\nexport const useUpdateLang = () => {\n    return useContext(UpdateLangContext);\n};\n\nexport const LangProvider = ({ children, value }) => {\n    //INITIAL LANGUAGE SELECTION \n    const defualtLang = localStorage.getItem(\"lang\") === null ? 'en' : localStorage.getItem(\"lang\")\n    const [lang, setLang] = useState(defualtLang);\n    // function switchhLang(){\n    //     console.log(value)\n    //     console.log(\"Triggred!!\")\n    //     setLang(value === 'en'? 'ar' : 'en') \n    //     console.log(lang)\n    // }\n    console.log(lang)\n    return (\n        <LangContext.Provider value={lang}>\n            <UpdateLangContext.Provider value={setLang}>\n                {children}\n            </UpdateLangContext.Provider>\n        </LangContext.Provider>\n    );\n};\n\nexport default LangProvider;","import Search from './Views/Search';\nimport { LangProvider} from './context/langContext';\nimport { Notification } from \"./components\";\n// import {AppState} from 'react';\n\n//import Dotenv Lib\nrequire('dotenv').config()\n\n\nfunction App() {\n  \n  return (\n      <LangProvider>\n        <Search/>\n        <Notification vertical={'top'} horizontal={'right'}/>\n      </LangProvider>\n  );\n}\n\nexport default App;\n\n\n\n//Write the tweets to json file\n// const json = JSON.stringify(res.results);\n// const blob = new Blob([json], {type: \"application/json;charset=utf-8\"});\n// FileSaver.saveAs(blob, \"mynewTweets2.json\");\n// return res.results;\n\n\n/*onScroll={listenScrollEvent}*/\n\n// function listenScrollEvent({target}){\n//   console.log(window.screen.width)\n//   const SearchBar = document.getElementById(\"main_area\");\n//   //Show the Header\n//   if ((target.scrollTop > 170) && (window.screen.width > 900)) {\n//     SearchBar.classList.add(\"mainArea_Header\")\n//   } else if (window.screen.width > 900){\n//     SearchBar.classList.remove(\"mainArea_Header\")\n//   } \n// }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { useEffect, useState } from \"react\";\nimport { Snackbar } from \"@material-ui/core\";\n\nlet OpenNotificationFunction;\n\nexport default function Notification (props) {\n    const [open, setOpen] = useState(false);\n    const [message, setMessage] = useState(\"\");\n    const [verticalPosition, setVerticalPosition] = useState(\"bottom\");\n    const [horizontalPosition, setHorizonPosition] = useState(\"right\");\n\n    const openNotification = newMessage => {\n    setOpen(true);\n    setMessage(newMessage);\n    };\n    const closeNotification = () => {\n        setOpen(false);\n        setMessage(\"\");\n    };\n    useEffect(() => {\n        OpenNotificationFunction = openNotification;\n    }, []);\n    useEffect(() => {\n        if (props.horizontal !== undefined) {\n        setHorizonPosition(props.horizontal);\n        }\n        if (props.vertical !== undefined) {\n        setVerticalPosition(props.vertical);\n        }\n    }, [props]);\n    const messageSpan = (\n        <span\n        id=\"snackbar-message-id\"\n        dangerouslySetInnerHTML={{ __html: message }}\n        />\n    );\n    const content = (\n        <Snackbar\n        anchorOrigin={{\n            vertical: verticalPosition,\n            horizontal: horizontalPosition,\n        }}\n        message={messageSpan}\n        autoHideDuration={3000}\n        onClose={closeNotification}\n        open={open}\n        ContentProps={{\n            \"aria-describedby\": \"snackbar-message-id\",\n        }}\n        />\n        \n    );\n    if (message === undefined) return null;\n    if (message === \"\") return null;\n    return content;\n};\n\nexport const notify = message => {\n    OpenNotificationFunction(message);\n};\n\n\n","import axios from \"axios\";\n\nconst baseURL = \"https://api.twitterreviews.xyz/\"//process.env.REACT_APP_BASE_URL;\n\nexport const axiosInstance = axios.create({\n    baseURL: baseURL,\n});\n\n\n\n// export const axiosInstance = axios.create({\n//     baseURL: baseURL,\n//     // withCredentials: false,\n//     headers: {\n//         contentType: 'application/x-www-form-urlencoded;charset=UTF-8',\n//         'Access-Control-Allow-Origin': '*',\n//         'Access-Control-Allow-Methods': 'GET, PUT, POST, DELETE, HEAD, OPTIONS',\n//         'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token',\n//     }\n// });","import { axiosInstance } from \"./axiosInstance\";\n// const key = process.env.REACT_APP_TWAPI_KEY\n// const sec = process.env.REACT_APP_TWAPI_SEC\n// const token = process.env.REACT_APP_EX_TWAPI_ACCTOKEN\n// const tokenSec = process.env.REACT_APP_EX_TWAPI_ACCTOKEN_SEC\n\nclass API {\n  // static baseURL = `${process.env.REACT_APP_BASE_URL}/1.1/`\n  //Return content from the DB\n  Search = (query) => { \n    return axiosInstance.post(`twitter/`, query).then((res) =>{\n      // console.log(res);\n      return res.data;\n    })\n    .catch((err) =>{\n      console.log(err.response)\n      if(err.response === undefined){\n        return -1;\n      }\n      //check if the user exceeded their daily limit by checking their IP address\n        if(err.response.status === 401) {\n          return -2;\n        }\n\n      return -1;\n    })\n  };\n  \n  GetIpAddress = () => {\n    return axiosInstance.get('http://geolocation-db.com/json/').then((res) =>{\n      console.log(res.data);\n      return res.data;\n    }).catch((err) =>{\n      console.log(err)\n      return -1;\n    })\n    // console.log(res.data);\n    // setIP(res.data.IPv4)\n  }\n\n}\n\nconst instance = new API();\nexport default instance;\n","import '../Styles/Search.css'\nimport React, {useState} from 'react'\nimport Loader from \"react-loader-spinner\";\nimport SearchResults from './SearchResults';\nimport API from '../helprs/api'\nimport LangMenu from '../components/LangMenu'\nimport {useLanguage, LangOptions } from '../context';\nimport { notify } from \"../components\";\n\n\nexport default function Search() {\n\n    const [loading, SetLoading] = useState(false);\n    const [hideTitle, setHideTitle] = useState(false)\n    const [tweets, setTweets] = useState()\n    const currentLang = useLanguage();\n\n    async function IpAddExceedLimit(){\n        //if an address value exists in the local storage return in\n        if (localStorage[\"address\"]){\n            //decode the ip address from the local storage\n            return Buffer.from(localStorage[\"address\"], 'base64').toString('ascii')\n        }\n        //else get the users IP address\n        const ipAdd = await API.GetIpAddress()\n        console.log(ipAdd.IPv4)\n        //encode the ip address to base64 and store it to the local storage\n        localStorage[\"address\"] =Buffer.from(ipAdd.IPv4).toString('base64');\n        console.log(\"ADDED NEW IP ADDRESS\");\n        //decode the ip address from the local storage\n        return Buffer.from(localStorage[\"address\"], 'base64').toString('ascii')\n    }\n\n    async function search(query){\n        //check if the query is not empty \n        if (query.trim() === \"\") {\n            notify(LangOptions.MainPage[currentLang].emptyError)\n            return -1;\n        }\n        //retrive the user's IP address \n        const userIp = await IpAddExceedLimit()\n        // trigger the loader\n        SetLoading(true);\n        //check if the query is in arabic\n        const ar = new RegExp('[ء-ي]+')\n        //request body to be sent to the backend\n        const req = {\n            'query' : query,\n            'lan' : ar.test(query)? \"ar\" : \"en\",\n            'ip_address': userIp\n        \n        }\n        //Send the request to the Backend\n        const TweetSearch = await API.Search(req)\n        if(TweetSearch === -1) {\n            notify(LangOptions.MainPage[currentLang].generalError)\n            return -1;\n        }\n        //check if the user exceeded their daily limit by checking their IP address\n        if(TweetSearch === -2) {\n            notify(LangOptions.MainPage[currentLang].exceedError)\n            return -1;\n        }\n        return TweetSearch;\n    }\n\n\n    async function SubmitOnEnter(event){\n        // console.log(event.key)\n        if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n        event.preventDefault();\n        //Close Mobile keyboard\n        const SearchBar = document.getElementById(\"SeachBar\");\n        SearchBar.blur();\n        //Search Twitter API for the input value\n        const results = await search(event.target.value)\n        // console.log(results)\n        if (results !== -1){\n            setTweets(results);\n            //Add class name to the SearchBar and Logo elements to enalbe the animiation\n            document.getElementById(\"main_area\")\n                .classList.add(\"mainArea_slide\");\n            \n            document.getElementById(\"twit_revLogo\")\n                .classList.add(\"animate_logo\");\n            \n            SetLoading(false);\n            setHideTitle(true);\n        }\n        else {\n            SetLoading(false);\n            console.warn(\"Something Went Wrong!\")\n        }\n        // //Set the Date\n        // setCurentDate(new Date());\n        }\n    }\n    return (\n        <div className=\"App\">\n            <div className=\"Header\"> \n                <img id='twit_revLogo' className=\"Logo\" src=\"images/Logo.png\" alt=\"Twitter Reviews's Logo\"/> \n            </div>\n            <div className=\"ChangLang\"> \n                <LangMenu/>\n            </div>      \n            <div id='main_area' className=\"MainArea\"> \n                <h1 style={hideTitle ? { visibility: 'hidden', opacity: 0, transition:' visibility 1s, opacity 0.5s linear'} : {}} className=\"Title\">Twitter Reviews</h1>\n                <input id='SeachBar' type=\"text\"  style={{\"direction\":`${currentLang === 'en' ? 'ltr' : 'rtl'}`}} placeholder={LangOptions.MainPage[currentLang].placeHolder} onKeyUp={SubmitOnEnter}/*onFocus=\"blur();\"*/ />\n            </div>\n            {hideTitle ? <SearchResults data={tweets}/> : \"\"}\n            {loading ? \n            <div className=\"blurBG\"> <Loader className=\"Loader\" type=\"ThreeDots\" color=\"#00BFFF\" height={100} width={100} timeout={60000}/> </div> : \"\"}\n        </div>\n    )\n}\n\n\n // const [lang, setLang] = useState(localStorage.getItem(\"lang\"))\n\n    //update the app language based on the value passed from LangMenu.js thru the 'updateLang' props\n    // const getUserLang = (newLang) => setLang(newLang)\n\n // useEffect(() => {\n    //   setLang(localStorage.getItem(\"lang\"))\n    // }, [localStorage.getItem(\"lang\")])\n    \n//   useEffect(() => {\n//     //Submit if Eneter is clicked on the SearchBar\n//     const SearchBar = document\n//         .getElementById(\"SeachBar\")\n//         .addEventListener(\"keyup\", SubmitOnEnter);\n//     //Checking the scroll position for showing the header\n\n//     return() =>{\n//       if(SearchBar) SearchBar.removeEventListener(\"keyup\", SubmitOnEnter);\n//   }\n// }, []);","import '../Styles/LangMenu.css'\nimport { useState } from 'react';\nimport { MdOutlineLanguage} from 'react-icons/md';\nimport {IoIosArrowDown} from 'react-icons/io';\nimport {useUpdateLang } from '../context/langContext';\n\n\nexport default function LangMenu() {\n    const defualtLang = localStorage.getItem(\"lang\")\n    const [showMenu, setShowMenu] = useState('false')\n\n    //FOR THE DROP DOWN MENU HIGHLIGHT EFFECT\n    const [engSelected, setEngSelected] = useState(defualtLang === 'en'? 'true': 'false')\n    const [arSelected, setArSelected] = useState(defualtLang === 'ar'? 'true': 'false')\n\n    const updatLang = useUpdateLang();\n    // updatLang(defualtLang)\n\n    const iconClicked = () => {\n        showMenu === 'true' ? setShowMenu('false') : setShowMenu('true')\n    }\n\n    const EngClicked = () => {\n        setEngSelected('true')\n        setArSelected('false')\n        localStorage.setItem(\"lang\", \"en\")\n        // setLang('en')\n        updatLang('en')\n        // props.updateLang('en')\n        setTimeout(() => {\n            setShowMenu('false')\n        }, 2000);\n    }\n    const ArClicked = () => {\n        setArSelected('true')\n        setEngSelected('false')\n        localStorage.setItem(\"lang\", \"ar\")\n        updatLang('ar')\n        // props.updateLang('ar')\n        setTimeout(() => {\n            setShowMenu('false')\n        }, 2000);\n    }\n    return (\n        <div className='LangMenu'>\n            <div className=\"LangPicker\" onClick={iconClicked}>\n                <MdOutlineLanguage className=\"LangPickerIcons\" size={30}/> \n                <IoIosArrowDown className=\"LangPickerIcons\" size={24}/>\n            </div>\n            <div className='LangOptions' display={showMenu}>\n                <div className='LangOptionsText' onClick={EngClicked} display={engSelected}> <b>English</b> </div>\n                <div className='LangOptionsText' onClick={ArClicked} display={arSelected}> <b>العربية</b> </div>\n            </div>\n        </div>\n    )\n}\n","import React, {useState, useEffect} from 'react'\n// import API from './helprs/api'\n// import './Styles/Twitter.css'\nimport { v4 as uuidv4 } from 'uuid';\nimport '../Styles/testTwitter.css'\nimport { AiOutlineHeart } from 'react-icons/ai';\nimport { BiRepost} from 'react-icons/bi';\nimport { FaRegComment} from 'react-icons/fa';\nimport { MdVerified} from 'react-icons/md';\nimport { IoOpenOutline} from 'react-icons/io5';\nimport {useLanguage, LangOptions } from '../context';\n\n\n\n\nexport default function Twitter({postive, negative, searchTerm}) {\n    const [postiveTweets, setPostiveTweets] = useState([])\n    const [negativeTweets, setNegativeTweets] = useState([])\n    const [isPositiveCliced, setIsPositiveCliced] = useState('true')\n    const [isNegativeClicked, setIsNegativeClicked] = useState('false')\n    const [tweetsDisplay, setTweetsDisplay] = useState([])\n    const [lastScrollPos, setLastScrollPos] = useState(0)\n    const [lastScrollUpPos, setLastScrollUpPos] = useState(0)\n    const [divHeight, setDivHeight] = useState(0)\n\n    //get the dev of the buttons to minuplate when scrolling up or down\n    const buttons = document.getElementById(\"display_btns\");\n\n    //get the value of langugage context\n    const currentLang = useLanguage();\n\n    //Values to be used for the scroll event listner function\n    const scorllDownThreshold = 180\n    const scrollUpThreshold = 40\n    const maxBottomVal = 90\n    const maxDivHeight = 40\n    \n    function listenScrollEvent({target}){\n        /**ToDO: fix the fast scrolling issue (when scrolling fast the div dosen't behave as expected (doesn't fully disapear or fully apear)\n         * /*TODO: add threshold after which the div will apear or dissapear (currently the div appear and dispear as soon as the user scroll up and down)\n        */\n        /**when scroll event happens inside the tweets dispaly div, this function checks if the scroll value if it's\n         * less than 180 to hide the buttons (postive, negative) off screen by adding properties (bottom & heigt)\n         *  if the scroll is greater than 180 and it's greater than the previous scroll value (scrolling down) the buttuns will dissapare, and update the previous scroll value\n         * if the scroll is greater than 180 but less than the previous scroll (scrolling down) the bottuns will reapear.\n        */\n        //get the tweets scroll div height\n        // const scrollDivHeight = document.getElementById('scrl_twts').scrollHeight\n        const currentScrollPos = target.scrollTop\n        // console.log(`lastScrollpos: ${lastScrollPos}, lastScrollUppos: ${lastScrollUpPos}, CurrentScroll: ${currentScrollPos}`)\n        if (currentScrollPos < scorllDownThreshold ){\n            //remove the bottom and height properties so the div have it's original posistion\n            buttons.style.removeProperty(\"bottom\")\n            return buttons.style.removeProperty(\"height\")\n        }\n        if (currentScrollPos > lastScrollPos){\n            \n            // if((target.scrollTop-scorllDownThreshold > maxBottomVal) && (divHeight-(target.scrollTop-scorllDownThreshold) < maxDivHeight)) {console.log(\"A Finshed******\"); return setLastScrollUpPos(target.scrollTop)}\n            // if the div have fade in (means the user scroll down (hide the div) then scroll up (show the div) then scrolled down again) change the cacluation \n            if (lastScrollUpPos > lastScrollPos){\n                if (currentScrollPos-lastScrollPos < maxBottomVal) buttons.style.setProperty('bottom', `${currentScrollPos-lastScrollPos}px`)\n                if (divHeight-(currentScrollPos-lastScrollPos) >= maxDivHeight)  buttons.style.setProperty('height', `${divHeight-(currentScrollPos-lastScrollPos)}px`)\n                else {setLastScrollUpPos(currentScrollPos); setLastScrollPos(currentScrollPos)}\n                return\n            }\n            /**update the previous scroll value, then increase the bottom value untill it's 50px \n             * and decrease the div height untill it meets the max div height (40 px)*/\n            // console.log(\"***HERE AGAIN SCROLL DOWN***\")\n            setLastScrollPos(currentScrollPos)\n            setLastScrollUpPos(currentScrollPos)\n            if (currentScrollPos-scorllDownThreshold < maxBottomVal) buttons.style.setProperty('bottom', `${currentScrollPos-scorllDownThreshold}px`)\n            if (divHeight-(currentScrollPos-scorllDownThreshold) >= maxDivHeight) buttons.style.setProperty('height', `${divHeight-(currentScrollPos-scorllDownThreshold)}px`)\n            return \n        }\n        else if(currentScrollPos < lastScrollUpPos){\n            /**decrease the bottom value untill it's 0px \n             * and increase the div height untill it's = to the original height of the div (divHeight)\n             * that was captaured before increasing or decreasing it's size upon scrolling*/\n            // reset scroll position\n            // console.log(\"***SHIIIIIIT SCROLL UP***\")\n            if ((currentScrollPos-lastScrollUpPos)+(scorllDownThreshold-scrollUpThreshold) < 0 && divHeight - ((lastScrollUpPos-currentScrollPos)+ scrollUpThreshold) < 0) return setLastScrollPos(currentScrollPos)\n            if ((currentScrollPos-lastScrollUpPos)+(scorllDownThreshold-scrollUpThreshold) >= 0) buttons.style.setProperty('bottom', `${(currentScrollPos-lastScrollUpPos)+(scorllDownThreshold-scrollUpThreshold)}px`)\n            if (divHeight - ((lastScrollUpPos-currentScrollPos)+ scrollUpThreshold) >= 0) buttons.style.setProperty('height', `${(lastScrollUpPos-currentScrollPos)+ scrollUpThreshold}px`)\n            return \n        }\n    }\n\n    //Replace more than 3 digits numbers with . + k (i.e 3400 = 3.4k)\n    function formatAnalatics (n){\n        if (n < 1e3) return n;\n        if (n >= 1e3) return +(n / 1e3).toFixed(1) + \"K\";\n    }\n    //Remove the seonds and extra digits from the date string\n    function formatDate(date){\n        let newDate = date.replace('+0000 ', '');\n        let sec = /:\\d{2} /.exec(newDate) \n        newDate = newDate.replace(sec, ' ')\n        return newDate; \n    }\n\n    //Compare tweets based on their likes and rewtees\n    function compare( a, b ) {\n        if ((a.retweet_count + a.favorite_count) > (b.retweet_count + b.favorite_count)){\n            return -1;\n        }\n        if ( (a.retweet_count + a.favorite_count) < (b.retweet_count + b.favorite_count) ){\n            return 1;\n        }\n        return 0;\n    }\n    //   objs.sort( compare );\n\n    const posiClick = () =>{\n        setIsNegativeClicked('false')\n        setIsPositiveCliced('true')\n    }\n\n    const negClick = () =>{\n        setIsPositiveCliced('false')\n        setIsNegativeClicked('true')\n    }\n\n    //Add tweets to their own classification.\n    useEffect(() => {\n        /**when thes fucntion loads after each refresh or new search\n          empty previous tweets then sort the new tweets based on their (likes + retweets) */\n        setPostiveTweets([])\n        setNegativeTweets([])\n\n        postive.sort(compare)\n        negative.sort(compare)\n\n        setPostiveTweets(postive) \n        setNegativeTweets(negative)\n\n        //get the buttons div height to be used in the scrollhandler function\n        const buttons = document.getElementById(\"display_btns\");\n        setDivHeight(buttons.clientHeight)\n    }, [postive, negative])\n\n    //display tweets based on the button clicked (i.e positive or negative)\n    const displayRequestClass = () => {\n        let classifiedTweets;\n        if (isPositiveCliced === 'true'){\n            classifiedTweets = postiveTweets.map((tweet) => {\n                return(\n                    <span className=\"tweet_container\" key={tweet.id+uuidv4()}>\n                        <div className=\"profile_img\">\n                            <img src={tweet.profile_image_url} alt=\"profile_img\"></img>\n                        </div>\n                        <div className=\"tweet_info\">\n                            <span className=\"user_info\">\n                                <div style={{'display': 'flex', 'alignItems':'center'}}>\n                                    <b style={{'color':'#F5F8FA', 'fontSize':'1em'}}>{tweet.screen_name}</b>\n                                    {tweet.verified ? <MdVerified className=\"verified_icon\"/>: null}\n                                    <p style={{'color':'#AAB8C2', 'fontSize':'0.8em', 'marginLeft': '0.5em'}}>{`@${tweet.username}`}</p>\n                                    <IoOpenOutline className=\"open_tweet\" onClick={() => {\n                                        const url = 'https://twitter.com/' + tweet.username + '/status/' + tweet.id;\n                                        window.open(url, '_blank')\n                                    }}/>\n                                </div>\n                            </span>\n                            <p className='tweet_text' id=\"tweet_txt\">{tweet.tweet}</p>\n                            \n                            <p className=\"tweet_date\">{formatDate(tweet.date)}</p>\n                        \n                            <div className='tweet_analatics'>\n                                <span className=\"tweet_analatics_replies\">\n                                    <FaRegComment className=\"analatics_icon\"/>\n                                    <p> {formatAnalatics(tweet.reply_count)} </p>\n                                </span>\n                                <span className=\"tweet_analatics_retweets\">\n                                    <BiRepost className=\"analatics_icon analatics_icon_retweet\"/>\n                                    <p>{formatAnalatics(tweet.retweet_count)} </p>\n                                </span>\n                                <span className=\"tweet_analatics_likes\">\n                                    <AiOutlineHeart className=\"analatics_icon\"/>\n                                    <p>{formatAnalatics(tweet.favorite_count)}</p>\n                                </span>\n                            </div>\n                        </div>\n                    </span>\n                )\n            }\n        )}\n        else{\n            classifiedTweets = negativeTweets.map((tweet) => {\n                tweet.tweet.replace(searchTerm, \"<b style={{'color': '#1DA1F2'}}>\"+searchTerm+\"</b>\")\n                return(\n                    <span className=\"tweet_container\" key={tweet.id+uuidv4()}>\n                        <div className=\"profile_img\">\n                            <img src={tweet.profile_image_url} alt=\"profile_img\"></img>\n                        </div>\n                        <div className=\"tweet_info\">\n                            <span className=\"user_info\">\n                                <div style={{'display': 'flex', 'alignItems':'center'}}>\n                                    <b style={{'color':'#F5F8FA', 'fontSize':'1em'}}>{tweet.screen_name}</b>\n                                    {tweet.verified ? <MdVerified className=\"verified_icon\"/>: null}\n                                    <p style={{'color':'#AAB8C2', 'fontSize':'0.8em', 'marginLeft': '0.5em'}}>{`@${tweet.username}`}</p>\n                                    <IoOpenOutline className=\"open_tweet\" onClick={() => {\n                                        const url = 'https://twitter.com/' + tweet.username + '/status/' + tweet.id;\n                                        window.open(url, '_blank')\n                                    }}/>\n                                </div>\n                            </span>\n                            <p className='tweet_text' id=\"tweet_txt\">{tweet.tweet}</p>\n                            \n                            <p className=\"tweet_date\">{formatDate(tweet.date)}</p>\n                        \n                            <div className='tweet_analatics'>\n                                <span className=\"tweet_analatics_replies\">\n                                    <FaRegComment className=\"analatics_icon\"/>\n                                    <p> {formatAnalatics(tweet.reply_count)} </p>\n                                </span>\n                                <span className=\"tweet_analatics_retweets\">\n                                    <BiRepost className=\"analatics_icon analatics_icon_retweet\"/>\n                                    <p>{formatAnalatics(tweet.retweet_count)} </p>\n                                </span>\n                                <span className=\"tweet_analatics_likes\">\n                                    <AiOutlineHeart className=\"analatics_icon\"/>\n                                    <p>{formatAnalatics(tweet.favorite_count)}</p>\n                                </span>\n                            </div>\n                        </div>\n                    </span>\n                )\n            }\n        )}\n        return classifiedTweets\n    }\n\n    //update tweets to display based on button clicked\n    useEffect(() => {\n        async function changeDisplayedTweets (){\n            setTweetsDisplay([])\n            await setTweetsDisplay(displayRequestClass())\n        };\n        changeDisplayedTweets().then(() => {\n            //Highlight Search Term\n            const upperCaseFirst = searchTerm.charAt(0).toUpperCase() + searchTerm.slice(1).toLowerCase();\n            const hashtag = searchTerm.replace(\" \", '_')\n            const tweetsElements = document.getElementsByClassName('tweet_text')\n            for (let i = 0; i < tweetsElements.length; i++) {\n                tweetsElements[i].innerHTML = tweetsElements[i].innerHTML.replaceAll(`${upperCaseFirst}`, \"<b>\"+upperCaseFirst+\"</b>\");\n                tweetsElements[i].innerHTML = tweetsElements[i].innerHTML.replaceAll(`${hashtag}`, \"<b>\"+hashtag+\"</b>\");\n            }\n            // console.log(upperCaseFirst)\n            // console.log(searchTerm)\n        });\n    }, [postiveTweets, negativeTweets, isPositiveCliced, isNegativeClicked, searchTerm])\n\n    return (\n        <div className=\"display_tweets\">\n            <div className='display_btns' id='display_btns'>\n                <button className='positive_btn' clicked={isPositiveCliced} onClick={posiClick}> <b>{LangOptions.Twitter[currentLang].postive}</b> </button>\n                <button className='negative_btn' clicked={isNegativeClicked} onClick={negClick}> <b>{LangOptions.Twitter[currentLang].Negative}</b> </button>\n            </div>\n            <div className=\"scroll_tweets\" onScroll={listenScrollEvent}> \n                {tweetsDisplay}\n            </div>\n        </div>\n    )\n}\n\n\n// <span className=\"tweet_container\">\n//     <img src={tweets[1].user.profile_image_url} alt=\"profile image\"></img>\n//     <div className=\"user_info\">\n//         <span style={{'display': 'flex', 'align-items':'center'}}>\n//             <b style={{'color':'#F5F8FA', 'font-size':'1em', 'margin-left': '-0.6em'}}>{tweets[1].user.name}</b>\n//             <p style={{'color':'#AAB8C2', 'font-size':'0.8em', 'margin-left': '0.8em'}}>{`@${tweets[1].user.screen_name}`}</p>\n//         </span>\n//         <p className='tweet_text' >{ tweets[1].text}</p>\n//     </div>\n// </span>\n\n\n// const FileSaver = require('file-saver');\n\n// // async function search (){\n// // }\n// async function search(){\n//     const query = \"dave chappelle\"\n//     await API.Search(query, 'en').then((res) =>{\n//         console.log(res.results);\n//         //Write the tweets to json file\n//         const json = JSON.stringify(res.results);\n//         const blob = new Blob([json], {type: \"application/json;charset=utf-8\"});\n//         FileSaver.saveAs(blob, \"mynewTweets2.json\");\n//     });\n// }\n\n","import React,{useEffect} from 'react'\nimport '../Styles/SearchResults.css'\nimport Twitter from '../components/Twitter';\n// import TestTwitter from '../testTwitter'\nimport {useLanguage, LangOptions } from '../context';\n\n\nexport default function SearchPage({data}) {\n    //get the value of langugage context\n    const currentLang = useLanguage();\n\n    const Totalcount = data.total_count//data.sentimment[0].tweet_count\n    const positiveCount = data.postive_count//(data.sentimment[0].postive).length\n    const negativeCount = data.negative_count//(data.sentimment[0].negative).length\n\n   /**function formatDate(date){\n        /*regular expression to replace a sequence of four digits, \n        followed by a sequence of two digits, followed by a sequence of two digits, \n        with the first, plus a -, plus the second, plus a -, plus the third.\n        let newDate = date.replace(/(\\d{4})(\\d{2})(\\d{2})/g, '$1-$2-$3');\n        newDate = newDate.slice(0, -4);\n        console.log(date)\n        return newDate; \n    }  */ \n\n    //Convert English number to Arabic\n    function changeDigitsToArabic(number){\n        const convert = {\n            \"0\": \"٠\",\n            \"1\": \"١\",\n            \"2\": \"٢\",\n            \"3\": \"٣\",\n            \"4\": \"٤\",\n            \"5\": \"٥\",\n            \"6\": \"٦\",\n            \"7\": \"٧\",\n            \"8\": \"٨\",\n            \"9\": \"٩\",\n        }\n        const valueArr = Array.from(String(number), Number);\n        let result = ''\n        valueArr.forEach(num => {\n            result+= convert[num]\n        });\n        return result\n    }\n\n    useEffect(() => {\n        //Make the Search Results Slide into the view by adding 'SResults_Appear' ClassName\n        const SearchResult = document.getElementById(\"Search_Results\");\n        SearchResult.classList.add(\"SResults_Appear\");\n    }, [])\n\n    return (\n        <div id='Search_Results' className='SResults'>\n            <div className=\"text_results\">  \n                <strong> {LangOptions.SearchResults[currentLang].Found} {currentLang ==='en' ? Totalcount : changeDigitsToArabic(Totalcount)} {LangOptions.SearchResults[currentLang].Tweests}</strong>\n                {/** console.log(toString(props.data.content.requestParameters.fromDate))*/}\n                {/** <em style={{'fontSize':'0.5em'}}>From {formatDate(props.data.content.requestParameters.fromDate)} To {formatDate(props.data.content.requestParameters.toDate)}</em>*/} \n                <p> {currentLang ==='en' ? positiveCount : changeDigitsToArabic(positiveCount)} \n                    <span style={{color:'#52B8F1'}}> {LangOptions.SearchResults[currentLang].postive}</span>,\n                    {` ${currentLang ==='en' ? negativeCount : changeDigitsToArabic(negativeCount)}`}<span style={{color:'#F15265'}}> {LangOptions.SearchResults[currentLang].Negative}</span> {/**10 <span style={{color:'#EBC35C'}}>Neutral</span> */}\n                </p>  \n            \n            </div>\n\n            <span className=\"graphs_results\">\n                <div className=\"Graph_Container ChartsGraphs\">\n                    <img className=\"Graph_Img ChartsGraphs_img\" src={`data:image/png;base64, ${data.charts_graph/*data.sentimment[1][0]*/}`} alt=\"Bar Chart\" />\n                </div>\n                <div className='Graph_Container PieGraphs'>\n                    <img className=\"Graph_Img PieGraphs_img\" src={`data:image/png;base64, ${data.pie_graph/*data.sentimment[1][1]*/}`} alt=\"Pie Chart\" />\n                </div>\n            </span>\n\n            <Twitter postive={data.postive_tweets}//{data.sentimment[0].postive}\n                    negative={data.negative_tweets}//{data.sentimment[0].negative}\n                    searchTerm={data.search_term}/*{data.sentimment[0].search_term}*/ /> \n        \n        \n        </div>\n    )\n}\n\n//***text_results\n// <strong> Found {props.data.sentimment[0].tweet_count} Tweests</strong>\n// {/** console.log(toString(props.data.content.requestParameters.fromDate))*/}\n// {/** <em style={{'fontSize':'0.5em'}}>From {formatDate(props.data.content.requestParameters.fromDate)} To {formatDate(props.data.content.requestParameters.toDate)}</em>*/}\n\n// <p> {(props.data.sentimment[0].postive).length} <span style={{color:'#52B8F1'}}>postive</span>,\n// {` ${(props.data.sentimment[0].negative).length}`}<span style={{color:'#F15265'}}> Negative</span> {/**10 <span style={{color:'#EBC35C'}}>Neutral</span> */}</p>  \n\n\n\n//****Graph_Container ChartsGraphs\n//<img className=\"Graph_Img ChartsGraphs_img\" src={`data:image/png;base64, ${props.data.sentimment[1][0]}`} alt=\"Bar Chart\" />\n\n\n\n//****Graph_Container PieGraphs\n//<img className=\"Graph_Img ChartsGraphs_img\" src={`data:image/png;base64, ${props.data.sentimment[1][0]}`} alt=\"Bar Chart\" />\n\n\n// Graph_Container PieGraphs\n//<img className=\"Graph_Img PieGraphs_img\" src={`data:image/png;base64, ${props.data.sentimment[1][1]}`} alt=\"Pie Chart\" />\n\n// <Twitter postive={props.data.sentimment[0].postive}\n// negative={props.data.sentimment[0].negative}\n// searchTerm={props.data.sentimment[0].search_term}/>\n","const LangOptions = {\n    \"MainPage\" : {\n        \"en\" : {\n            \"placeHolder\" : \"Search For a product or services\",\n            \"generalError\" : \"Something Went Wrong\",\n            \"emptyError\" : \"You can't Leave the Search Box Empty\",\n            \"exceedError\" : \"You Exceeded Your Daily Search Limit\"\n        },\n        \"ar\" : {\n            \"placeHolder\" : \"ابحث عن منتج او خدمة\",\n            \"generalError\" : \"حدث خطأ ما\",\n            \"emptyError\" : \"لا يمكنك ترك خانة البحث فارغة\", \n            \"exceedError\" : \"لقد تجاوزت حدك اليومي للبحث\"\n        }\n    },\n    \"SearchResults\" : {\n        \"en\" : {\n            \"Found\" : \"Found\",\n            \"Tweests\": \"Tweests\",\n            \"postive\": \"Positive\",\n            \"Negative\": \"Negative\"\n        },\n\n        \"ar\" : {\n            \"Found\" : \"وجدنا\",\n            \"Tweests\": \"تغريدة\",\n            \"postive\": \"إيجابية\",\n            \"Negative\": \"سلبية\"\n        }\n    }, \n    \"Twitter\" : {\n        \"en\" : {\n            \"postive\": \"Positive\",\n            \"Negative\": \"Negative\"\n        },\n\n        \"ar\" : {\n            \"postive\": \"إيجابية\",\n            \"Negative\": \"سلبية\"\n        }\n    }\n\n}\n\nexport default LangOptions"],"sourceRoot":""}